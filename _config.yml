#---------------------
# Settings
#---------------------
title: API Evangelist Location API
description: This is a location API, providing many of the common building blocks of location. Providing the essential location ingredients needed through a variety of applications, without having to reinvent the wheel each times it is needed. This API is still being working on, and not quite ready for prime time, but if you have any questions, visit the road map and support sections below the documentation.
url: http://location.apievangelist.com
tag: Location, Cities, Regions, Countries
logo: https://kinlane-productions.s3.amazonaws.com/api-evangelist/api-evangelist-logo-400.png

owner_name: Kin Lane
owner_title: API Evangelist

#-------------------------------
# Current stage of this service
#-------------------------------
stage: development

#---------------
# Status Values
#---------------
status_values:
  - None
  - Not Used
  - In Progress
  - Active

#---------------------
# API Lifecycle Stops
#---------------------
stops:

  #-------------
  # Definitions
  #-------------
  - name: Definition
    title: Definitions
    description: All of the definitions that go into defining this service, from the original schema, the OpenAPI definitions, the Postman Collections, and the assertions that contribute to the testing of the service to ensure it is doing what is expected of it.
    header: All of the definitions available for this service, providing a single way to find everything that drives the project.
    footer: Providing a machine readable core for the entire lifecycle of this service, allowing documentation to be used elsewhere.
    instructions: Define the problem and solution in a human and machine readable way.
    image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-api-definitions.png
    status: Active
    items:

      - name: Organization
        description: The source control organization for this service.
        instruction: Define the organization for this service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-organization.jpg
        status: Active
        fields:
          - github_organization: api-evangelist-apis
        services:
          - name: GitHub
            description: The social coding repository management service.
            url: https://github.com

      - name: Repository
        description: The source control repository for this service.
        instruction: Establish a Github repository.
        status: Active
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-repository.jpg
        fields:
          - github_repository: locations
        services:
          - name: GitHub
            description: The social coding repository management service.
            url: https://github.com

      - name: README
        description: The README for this services repository
        instruction: Craft a README for the repository.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-readme.png
        status: Active
        fields:
          - readme_path: /README.md
        services:
          - name: GitHub
            description: The social coding repository management service.
            url: https://github.com

      - name: Service Name
        description: A simple title for this service.
        instruction: Provide title for the service.
        status: Active
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-service-request.png
        fields:
          - service_name: API Evangelist Location API

      - name: Service Description
        description: A simple, descriptive paragraph for this service.
        instruction: Provide concise description for the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-dependencies-services.png
        status: Active
        fields:
          - service_description: This is a location API, providing many of the common building blocks of location. Providing the essential location ingredients needed through a varietiy of applications, without having to reivent the wheel each times it is needed. This API is still being working on, and not quite ready for prime time, but if you have any questions, visit the road map and support sections below the documentation

      - name: Service Goals
        description: Providing some basic goals for this service.
        instruction: Establish goals that will guide this service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-gear-life-cycle.png
        status: Active
        fields:
          - service_goals: This is the goals for this service.
            goals:
              - name: Provide Locations
                descripton: Provide a set of cities, states, countries, and other location specific data for use across other applications.

      - name: Schema
        description: JSON schema for the data behind service.
        instruction: Organize loose, and JSON schema for the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-schema.png
        status: Active
        fields:
          - title: Cities
          - path: /json-schema/cities.json
          - title: Regions
          - path: /json-schema/regions.json
          - title: Countries
          - path: /json-schema/countries.json
        tools:
          - name: JSON Schema
            description: JSON Schema is a vocabulary that allows you to annotate and validate JSON documents.
            url: https://json-schema.org/

      - name: OpenAPI
        description: An OpenAPI definition for the surface area of the API.
        instruction: Establish an OpenAPI for the service.
        image: https://s3.amazonaws.com/kinlane-productions/openapi/openapi-icon.png
        status: None
        fields:
          - openapi: /_data/openapi.yaml
        tools:
          - name: OpenAPI
            description: The OpenAPI specification for describing the surface area of the API.
            url: https://github.com/OAI/OpenAPI-Specification

      - name: Assertions
        description: Human and machine readable assertions of what service does.
        instruction: Craft a set of assertions for the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-assertions.png
        status: None
        fields:
          - assertions:
            - title: The title of the assertion
              path: /path/of/the/assertion

      - name: Team
        description: A list of team members for the service.
        instruction: Define the team behind the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-team-working.png
        status: None
        fields:
          - team:
            - name: Kin Lane
              role: API Evangelist
              email: info@apievangelist.com
              twitter: kinlane
              github: kinlane

  #--------
  # Design
  #--------
  - name: Design
    title: Design
    header: The API design strategy for use as part of this service.
    footer: Setting a consistent design strategy for all services.
    instructions: Establish a base set of design practices for the service.
    image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-design.png
    status: Active
    items:

      - name: Versioning
        description: Managing the version for the various layers of this service.
        instruction: Determine how the code, schema, and the API be versioned.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-conversion.png
        status: None
        fields:
          - versioning:
            type: semantic
            format: major.minor.patch
            server: 1.0.0
            api: 1.0.0
            sdk: 1.0.0

      - name: Base Path
        description: The part of the path that goes after the host, and before each path, and is constant across all endpoints for this service.
        instruction: Set the base path for the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/base-path.png
        status: Active
        fields:
          - url: /v1

      - name: Path(s)
        description: The paths that are used to define each individual API resource.
        instruction: Define a set of resource paths for the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-path-resource.png
        status: Active
        fields:
          - number_of_paths: 5

      - name: Verb(s)
        description: The HTTP verbs used for this service, including GET, POST, PUT, and DELETE.
        instruction: Define which HTTP, and other verbs will be used for the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-verbs.png
        status: Active
        fields:
          - get: 2
          - post: 1
          - put: 1
          - delete: 1
        links:
          - name:

      - name: Parameters
        description: The query parameters that are used by this service, as described by the OpenAPI.
        instruction: Define a list of query parameters in use to work with service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-parameters.png
        status: Active
        fields:
          - number_of_parameters: 3

      - name: Headers
        description: The headers that are used by this service, as described by the OpenAPI.
        instruction: Define the HTTP Headers that will be used to work with the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-header-content-type.png
        status: Active
        fields:
          - number_of_headers: 0
        links:
          - title: API Evangelist Journey - Headers
            url: http://journey.apievangelist.com/journey/design/headers

      - name: Body
        description: Usage of the body as part of API requests as opposed to parameters, or in parallel to.
        instruction: Define the details of the body that will be used as part of making request to this service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-body.png
        status: Active
        fields:
          - number_of_bodies: 2

      - name: Beyond Verbs
        description: Consistently defining how actions will be designed beyond the usage of the common HTTP verbs.
        instruction: Define how actions are being defined as part of this service beyond the usage of common HTTP verbs.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-resource-action.png
        status: Active

      - name: Media Types
        description: The media types that are used by this service, as described by the OpenAPI.
        instruction: Define whether service will return CSV, JSON, and / or XML responses.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-media-type.png
        status: Active
        fields:
          - json: 5
          - xml: 0
          - html: 0
        tools:
          - name: IANA Media Types
            description: Media types that are defined by IANA.
            url: https://www.iana.org/assignments/media-types/media-types.xhtml

      - name: Status Codes
        description: The HTTP status codes that are used by this service, as described by the OpenAPI.
        instruction: Define the available HTTP status code for each responses.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-status-codes.png
        status: Active
        fields:
          - 200: 5
          - 300: 0
          - 400: 0
          - 500: 5
        tools:
          - name: Wikipedia List of HTTP status codes
            description: A list of all HTTP status codes for reference.
            url: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes

      - name: Filtering
        description: Allowing for the filtering of data returned as part of responses.
        instruction: Define how filtering will be handled for requests and responses.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-parameters.png
        status: Active
        fields:
          - used: 1

      - name: Pagination
        description: The pagination used by this service, as described by the OpenAPI.
        instruction: Define how pagination will be handled for requests and responses.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-pagination.png
        status: Active
        fields:
          - used: 1

      - name: Sorting
        description: The sorting used by this service, as described by the OpenAPI.
        instruction: Define how sorting will be handled for requests and responses.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-sorting.png
        status: Active
        fields:
          - used: 1

      - name: Response(s)
        description: The responses that are used by this service, as described by the OpenAPI.
        instruction: Provide a resulting message and associated schema definition for the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-forward.png
        status: Active
        fields:
          - number_of_headers: 5

      - name: Errors
        description: Defining a structure for error handling that leverages HTTP status codes, but goes further with a common schema definition.
        instruction: Provide a schema definition, and apply error handling as part of the wider HTTP status code usage.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-error.png
        status: Active

  #----------
  # Database
  #----------
  - name: Database
    title: Database
    header: The database behind this service, acting as the data source for these resources.
    footer: Providing a dedicated database resource for just this single service to use.
    instructions: Establish the base for how data will be managed behind the service.
    image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-database-new.png
    status: Active
    items:

      - name: Platform
        description: The database platform used to drive this service.
        instruction: Define which platform is in use to manage the database.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-platform-layers.png
        status: Active
        fields:
          - platform: Amazon RDS (Aurora)

      - name: Schema
        description: Making sure there is a database version of the schema.
        instruction: Establish the schema used for database based upon definition provided.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-schema.png
        status: Active
        fields:
          - schema: /sql/schema.sql

      - name: Region
        description: Where the database for this service is located.
        instruction: Define where the database is located that supports services.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-region.png
        status: Active
        fields:
          - location: laneworks-large

      - name: Access
        description: How the database is connected with by the service.
        instruction: Quantify how database access is provided behind the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-connector.png
        status: Active
        fields:
          - access: ODBC

      - name: Logs
        description: Understanding how logging occurs for the database.
        instruction: Define where the database logs are located that support services.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-logging-2.png
        status: Active
        fields:
          - logs: /rds

      - name: Backup
        description: Ensuring that the database has a backup strategy.
        instruction: Define the database backup process and location for service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-backup.png
        status: Active
        fields:
          - backup: /rds

      - name: Encryption
        description: Ensuring the encryption is part of the database operations.
        instruction: Define the encryption layer for the service database.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-encryption.png
        status: Active
        fields:
          - encryption: enabled

  #---------
  # Storage
  #---------
  - name: Storage
    title: Storage
    header: The storage used for this service, where all objects are stored.
    footer: Providing a single location this service to manage it's storage.
    instructions: Establish how all objects will be stored for the service.
    image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-cloud-storage.png
    status: Active
    items:

      - name: Platform
        description: The platform that is used for storage behind this service.
        instruction: Define which platform is used to store objects.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-platform-layers.png
        status: Active
        fields:
          - platform: Amazon S3

      - name: Region
        description: Where the storage is located that is used for this service.
        instruction: Define where objects are stored behind the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-region.png
        status: Active
        fields:
          - region: us-east
          - location: /api-evangelist-api-bucket/locations/

      - name: Access
        description: Details on how storage is accessed as part of this service.
        instruction: Quantify how objects access is provided behind the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-connector.png
        status: Active
        fields:
          - access: API

      - name: Logs
        description: Information about the logging for storage behind service.
        instruction: Define where the storage logs are located that support services.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-logging-2.png
        status: Active
        fields:
          - logs: /cloudwatch

      - name: Backup
        description: Ensuring there is a backup strategy for storage behind service.
        instruction: Define the backup process for objects behind the service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-backup.png
        status: None
        fields:
          - backup: Dropbox

      - name: Encryption
        description: Ensuring encryption is considered for storage.
        instruction: Define the encryption layer for stored objects.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-encryption.png
        status: Active
        fields:
          - encryption: enabled

  #-----
  # DNS
  #-----
  - name: DNS
    title: DNS
    header: The DNS addressing used to route all traffic to this service.
    footer: Using a single subdomain that can be used to access this resource.
    instructions: Establish the DNS layer for this service.
    image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-logging-dns.png
    status: Active
    items:

      - name: Platform
        description: Which platform is used to provide DNS for service.
        instruction: Define which platform is used to operate DNS.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-platform-layers.png
        status: None
        fields:
          - platform: CloudFlare
        tools:
          - name: CloudFlare
            description: A next generation cloud DNS service provider.
            url: https://www.cloudflare.com/
          - name: Amazon Route 53
            description: A next generation cloud DNS service provider.
            url: https://aws.amazon.com/route53/

      - name: Mock
        description: The host used for the mock API.
        instruction: Provide host for mock of service.
        image: https://s3.amazonaws.com/kinlane-productions/bw-icons/bw-mock-interface.png
        status: None
        fields:
          - host: api.mock.locations.apievangelist.com

      - name: Development
        description: The host used for the development API.
        instruction: Provide host for development version of service.
        status: None
        fields:
          - host: api.dev.locations.apievangelist.com

      - name: Production
        description: The host used for the production API.
        instruction: Provide host for production version of service.
        status: Active
        fields:
          - host: api.locations.apievangelist.com

      - name: Portal
        description: The host used for the developer portal.
        instruction: Provide host for the portal for this service.
        status: None
        fields:
          - host: locations.apievangelist.com

      - name: Encryption
        description: Ensuring encryption is used as part of API transport.
        instruction: Define the encryption layer for service in transport.
        status: None
        fields:
          - enabled: true

  #----------------
  # Virtualization
  #----------------
  - name: Virtualization
    title: Virtualization
    header: The definitions for this service.
    footer:
    instructions: Provide a mock representation of this service.
    status: Not Used
    items:

      - name: Paths
        description: Considering offering mock API paths for use by integrators.
        instruction: Providing virtualized paths for the API driving service.
        status: None

      - name: Data
        description: Considering offering synethic data for use by integrators.
        instruction: Providing synthesized data behind each API response for service.
        status: None

  #------------
  # Deployment
  #------------
  - name: Deployment
    header: The definitions for this service.
    footer:
    instructions: Define the deployment scaffolding for this service.
    status: None
    items:

      - name: Compute
        description: The compute that is delivering this service.
        instruction: Define the compute layer driving this service.
        status: None
        fields:
          - platform: Amazon EC2
        tools:
          - name: Amazon EC2
            description: The virtual compute instance service from Amazon.
            url: https://aws.amazon.com/ec2/

      - name: Framework
        description: Which programming framework is used to deploy this service.
        instruction: Define the code framework used to deploy service.
        status: None
        fields:
          - framework: none
        tools:
          - name: Slim
            description: A PHP framework for delivering RESTful API frameworks.
            url: https://www.slimframework.com/

      - name: Function
        description: Which function is used to deploy this service.
        instruction: Define the function(s) used to deploy service.
        status: None
        fields:
          - function: aws_lambda_function_name
        tools:
          - name: Node.js
            description: The server side JavaScript Framework.
            url: https://nodejs.org/en/
          - name: AWS Node.js SDK
            description: The Node.js SDK for working with all AWS services.
            url: https://aws.amazon.com/sdk-for-node-js/

      - name: Containers
        description: Which container is used to deploy this service.
        instruction: Define the container used to deploy service.
        status: None
        fields:
          - container: none

      - name: Gateway
        description: Which gateway is used to deploy this service.
        instruction: Define the gateway used to deploy service.
        status: None
        fields:
          - platform: none
        tools:
          - name: AWS API Gateway
            description: Amazon's API gateway solution for deploying and managing APIs.
            url: https://aws.amazon.com/api-gateway/

      - name: Pipeline
        description: Information regarding the pipeline in use for service.
        instruction: Define the pipeline in place to build and deploys service.
        status: None
        fields:
          - pipeline: none

      - name: Region
        description: Information regarding which region this service is deployed.
        instruction: Define where which region the service is deployed to.
        status: None
        fields:
          - region: us-east

  #---------------
  # Orchestration
  #---------------
  - name: Orchestration
    title: Orchestration
    header: The definitions for this service.
    footer:
    instructions: Define how the service will be orchestrated.
    status: None
    items:

      - name: Build
        description: Information regarding the build of this service.
        instruction: Define the build process for this service.
        status: None
        fields:
          - build: manual

      - name: Hooks
        description: Information regarding pre or post commit hooks for this service.
        instruction: Detail the pre and post commit hooks in use for this service.
        status: None
        fields:
          - hooks:
            - name: Name of Hook
              invoked: git commit
              description: The description of the hook.
              commands: /path/file_name

      - name: Jobs
        description: Information regarding the jobs used as part of this service.
        instruction: Define the jobs being executed as part of this service operations.
        status: None
        fields:
          - jobs:
            - name: Name of Job
              description: Description of job.
              openapi: /path/to/openapi/definition/for/job/
              function: lambda_script_used_for_this_job

      - name: Events
        description: Information about events used for managing jobs for this service.
        instruction: Define the events that are in play to help operate this service.
        status: None
        fields:
          - jobs:
            - name: Name of Event
              description: Description of event.

      - name: Schedule
        description: Information about the schedule sin use to manage this service.
        instruction: Details of the schedules used to orchestrate this service.
        status: None
        fields:
          - jobs:
            - name: Name of Schedule
              description: Description of schedule.
              command: command

  #--------------
  # Dependencies
  #--------------
  - name: Dependencies
    title: Dependencies
    header: The definitions for this service.
    footer:
    instructions: Providing details of the dependencies that exist for this service.
    status: None
    items:

      - name: Service
        description: Information about services this service depends on.
        instruction: Details of other services this service depends upon.
        status: None
        fields:
          - name: Name of Service
          - description: The description of service.
          - url: http://example.com/service-information/

      - name: Software
        description: Information about software this service depends on.
        instruction: Details of other software this service depends upon.
        status: None
        fields:
          - name: Name of Software
          - description: The description of software.
          - url: http://example.com/software-information/

      - name: Data
        description: Information about data this service depends on.
        instruction: Details of other data this service depends upon.
        status: Active
        fields:
          - name: prograhammer/countries-regions-cities
          - description: MySQL ready-to-use tables with countries, regions/states and cities of the world.
          - url: https://github.com/prograhammer/countries-regions-cities

      - name: People
        description: Information about people this service depends on.
        instruction: Details of other people this service depends upon.
        status: None
        fields:
          - name: Name of Person
          - description: The description of person / relationship.
          - email: info@example.com
          - github_user: user

      - name: Organization
        description: Information about organization this service depends on.
        instruction: Details of other organizations this service depends upon.
        status: None
        fields:
          - name: Name of Organization
          - description: The description of organization / relationship.
          - email: info@example.com
          - url: http://example.com

  #--------------
  # Authentication
  #--------------
  - name: Authentication
    title: Authentication
    header: The definitions for this service.
    footer:
    instructions: Details regarding authentication in use for this service.
    status: Active
    items:

      - name: Type
        description: Information how you authenticate with this service.
        instruction: Define whether this service uses Basic Auth, API Keys, JWT, or OAuth for authentication.
        status: None
        fields:
          - name: Basic Authentication
            description: Basic auth leverages web standards for passing a username and password for authentication.
            url: https://en.wikipedia.org/wiki/Basic_access_authentication
            status: None
          - name: API Key
            description: Using an API key pass as query string, or as header for authentication.
            url: https://en.wikipedia.org/wiki/Application_programming_interface_key
            status: Active
          - name: JSON Web Tokens
            description: Industry standard RFC 7519 method for representing claims securely between two parties.
            url: https://jwt.io/
            status: None
          - name: OAuth
            description: A standard for token-based authentication and authorization, allowing an end user's account information to be used via API access.
            url: https://oauth.net/
            status: None

      - name: Overview
        description: An overview for the authentication of this service.
        instruction: Provide a location of the page that delivers an overview of this services authentication.
        status: Active
        fields:
          - title: Authentication For The APIs
          - header: This is the authentication for this API, providing you with the information you need to securely make API calls.
          - footer: We try to keep API authentication as simple as possible, while also ensuring the data we provide is securely accessed.
          - url: http://public.companies.apievangelist.com#authentication

      - name: Signup / Login
        description: An overview for the authentication of this service.
        instruction: Provide a location of the page that delivers an overview of this services authentication.
        status: Active
        fields:
          - title: Signing Up / Logging In For The API
          - header: I don't make you sign up for yet another account, we just use your OAuth from your GitHub, Twitter, or LinkedIn.
          - footer: I'm not interested in your data, and do not pull any other data from your accounts beyond the scaope requested.
          - url: http://public.companies.apievangelist.com#sign-up-login

  #------------
  # Management
  #------------
  - name: Management
    title: Management
    header: The management of this service, managing all access to APIs.
    footer: Leveraging a proven solution for securing all resources provided.
    instructions: Define the management layer for this service's API.
    status: Active
    items:

      - name: Platform
        description: Details on which API management platform is used for this service.
        instruction: Defining the platform used for the API management layer.
        status: Active
        fields:
          - platform: AWS API Gateway
        tools:
          - name: AWS API Gateway
            description: Amazon's API gateway solution for deploying and managing APIs.
            url: https://aws.amazon.com/api-gateway/
            status: Active
          - name: Kong
            description: An open source API management solution, with enterprise options.
            url: https://konghq.com/
            status: None

      - name: Administration
        description: Where you find the administrative access for API management.
        instruction: Provide a location for administrating the management layer.
        status: Active
        fields:
          - url: https://console.aws.amazon.com/apigateway/home?region=us-east-1

      - name: Signup
        description: Where you can sign up for access to this service.
        instruction: Provide a location for users to signup for access to this service.
        status: Active
        fields:
          - url: http://locations.apievangelist.com/

      - name: Login
        description: Where you can login for access to this service.
        instruction: Provide a location for users to login to access to this service.
        status: Active
        fields:
          - url: http://locations.apievangelist.com/

      - name: Account
        description: Where you can access accouint information when using service.
        instruction: Provide a location for users to access a dashboard for this service.
        status: None
        fields:
          - url: https://example.com/account/

      - name: Applications
        description: Details about the developer's applications approved to use this service.
        instruction: Provide a location for the applications that are approved to use service.
        status: None
        fields:
          - url: https://example.com/applications/

  #---------
  # Logging
  #---------
  - name: Logging
    title: Logging
    header: The definitions for this service.
    footer:
    instructions: Define the logging layer for supporting this service.
    status: Active
    items:

      - name: Database
        description: Information about database logs.
        instruction: Define the logging for the database layer.
        status: Active
        fields:
          - location: /rds

      - name: API
        description: Information about API logs.
        instruction: Define the logging for the API access layer.
        status: Active
        fields:
          - location: /cloudwatch

      - name: DNS
        description: Information about DNS logs.
        instruction: Define the logging for the DNS layer.
        status: Active
        fields:
          - location: /cloudflare

      - name: Shipping
        description: Information about shipping logs centrally to service's storage.
        instruction: Define how logs are shipped or centralized for auditing.
        status: Active
        fields:
          - enabled: true
          - location: /api-evangelist-api-bucket/locations/logs/

  #--------------
  # Monetization
  #--------------
  - name: Monetization
    title: Monetization
    header: Define the monetization history, and the details leading to a plan.
    footer: Tracking on everything that goes into delivering this service.
    instructions: Define the costs associated with the delivery of this service.
    status: Active
    items:

      - name: Acquisition
        description: Understanding what it costs to acquire the resources behind this service.
        instruction: Provide costs associated with acquisition of resources behind service.
        status: Active
        fields:
          - initial_hours: 1
          - initial_cost: $100.00
          - monthly_hours: 1
          - monthly_cost: $100.00

      - name: Development
        description: Understanding what it cost to develop this service.
        instruction: Provide costs associated with the development of this service.
        status: Active
        fields:
          - initial_hours: 6
          - initial_cost: $600.00
          - monthly_hours: 0
          - monthly_cost: 0

      - name: Operation
        description: Understanding what it costs to operate this service.
        instruction: Provide costs associated with the operation of this service.
        status: Active
        fields:
          - initial_hours: 2
          - initial_cost: $200.00
          - monthly_hours: 2
          - monthly_cost: $200.00

      - name: Value
        description: Articulating what value is provided by this service.
        instruction: Provide a description of the value delivered by this service.
        status: Active
        fields:
          - description: Delivers X value for consumers by providing them Y.

  #-------
  # Plans
  #-------
  - name: Plans
    title: Plans
    description: Having one or many plans for accessing this service, ensuring that all consumption occurs through the filter of a plan, and fit into a wider platform management strategy.
    header: These are the plans for accessing this service, providing different tiers of access depending on your needs, and what is allowed for this service. Each plan should have the details you need to understand the limitations, as well as other elements provided for the service at this tier.
    footer: Currently there are just two plans available, if you have more needs than what is here, use one of the support channels to let us know what it is that you need. There are other levels available, but this is the standard public offering for this service at this moment in time.
    instructions: Define the operational plan for the business of this service.
    status: Active
    items:

      - name: Tiers
        description: The tiers of access for this service.
        instruction: Define the tiers of access in place to support this service.
        status: Active
        fields:

          - plans:
            - name: Starter
              description: The default API access plan, where every new account begins, allowing the consumer to kick the tires, and see what the API is all about.
              image: http://locations.apievangelist.com/assets/images/starter.png
              status: Active
              entries:
                - label: API Calls
                  description: The number of requests made to the API.
                  metric: calls
                  limit: 25
                  timeframe: day
                  geo: US
                  one: 1
                  two:
                  unit: free
              elements:
                - name: Free
                - name: Self Service Support

            - name: Verified
              description: Once you have added a credit card as part of the account billing, you become a verified API consumer, and have a higher rate limit for usage.
              image: http://locations.apievangelist.com/assets/images/verified.png
              status: Active
              entries:
                - label: API Calls
                  description: The number of requests made to the API.
                  metric: calls
                  limit: Pay As You Go
                  timeframe: day
                  geo: US
                  one: 1
                  two:
                  unit: .0025
              elements:
                - name: Support
                - name: Sales
                - name: Security
                - name: SLA

  #--------
  # Portal
  #--------
  - name: Portal
    title: Portal / Landing Page
    header: The portal landing page for this service, providing a single location to access the service.
    footer: Providing a single known location discovery and return when information about service is needed.
    instructions: Define the public or private portal in use to present this service.
    status: Active
    items:

      - name: Hosting
        description: Information about the hosting service used for this portal.
        instruction: Provide details on where this service portal is hosted.
        status: Active
        fields:
          - host: Github Pages
        tools:
          - name: Github Pages
            description: Hosted as a static Jekyll site as part of the GitHub repository for the service.
            url: https://pages.github.com/

      - name: Template
        description: Information regarding the UI template used for this portal.
        instruction: Define which graphical UI and brand template is in use for this portal.
        status: Active
        fields:
          template: HTML5 Up
        tools:
          - name: HTML5 Up
            description: A HTML, CSS, and JavaScript Jekyll template.
            url: https://html5up.net/

      - name: Analytics
        description: Information about the analytics in use for tracking on this portal.
        instruction: Define which analytics package is used to measure traffic for portal.
        status: None
        fields:
          - analytics:
              - Google Analytics
              - Github Analytics
        tools:
          - name: Google Analytics
            description: Using embedded Google Analytics for managing traffic.
            url: https://analytics.google.com/analytics/web/
            status: Active
          - name: Github Analytics
            description: Using embedded Google Analytics for managing traffic.
            url: https://blog.github.com/2014-01-07-introducing-github-traffic-analytics/
            status: Active

  #-----------------
  # Getting Started
  #-----------------
  - name: Getting Started
    title: Getting Started
    header: These are the steps you need to take when getting started using this service.
    footer: If you have any questions, feel free to reach out, and I'll do my best to help.
    description: Providing basic getting started information for dvelopers to use when on-boarding.
    instructions: Provide a getting started page for this service within portal.
    image: http://locations.apievangelist.com/assets/images/getting-started.png
    status: Active
    items:

      - name: Signup
        title: Signup
        description: Where you can signup for this service.
        instruction: Provide a link to where users can signup for this service.
        status: None
        fields:
          url: http://locations.apievangelist.com/#sign-up

      - name: Authentication
        title: Authentication
        description: Where you can get details about authenticating with this service.
        instruction: Provide a link to the authentication overview for this service.
        status: None
        fields:
          - url: http://locations.apievangelist.com/#authentication

      - name: Documentation
        title: Documentation
        description: Where you can find documentation for this service.
        instruction: Provide a link to the documentation for this service.
        status: None
        fields:
          - url: http://locations.apievangelist.com/#documentation

      - name: SDKs
        title: SDKs
        description: Where you can find SDKs in multiple programming languages for this service.
        instruction: Provide a link to where users can find SDKs and code libraries for this service.
        status: None
        fields:
          - url: http://locations.apievangelist.com/#sdks

      - name: FAQ
        title: FAQ
        description: Where you can get your common questions answered around this service.
        instruction: Provide a link to to the frequently asked questions for this service.
        status: None
        fields:
          - url: http://locations.apievangelist.com/#faq

      - name: Support
        title: Support
        description: Where you can get support for using this service.
        instruction: Provide a link to where users can get support for this service.
        status: None
        fields:
          - url: http://locations.apievangelist.com/#support

  #---------------
  # Documentation
  #---------------
  - name: Documentation
    title: Documentation
    header: This is the interactive API documentation for this API, and when you are authenticated, will allow you to make API calls, and see the responses for each API path.
    footer: This documentation is generated from the OpenAPI definition for this API, which you can use to publish, syndicate, and integrate with this API documentation elsewhere.
    instructions: Provide documentation for this service within portal.
    status: Active
    items:

      - name: Paths
        description: Documentng the API paths that are available for this service.
        instruction: Publish an interactive list of API paths available for service.
        status: Active
        fields:
          - status: active
          - url: http://locations.apievangelist.com/#documentation

      - name: Schema
        title: Schema
        header: These are the schema definitions in use for this service, providing a human, and machine readable listing of the schema used as part of requests and responses for this service.
        footer: This should provide you with what you need to understand the structure of how you make requests to some of the APIs, and what you can expect with each of the API responses.
        description: The descriptive header and footer paragraphs for the documentation schema.
        instruction: Provide some content to introduce and close up the documentation schema.
        status: Active
        fields:
          - status: Active
          - url: http://locations.apievangelist.com/#schema

      - name: Examples
        description: Examples of using the API paths for this service.
        instruction: Provide as many examples of API requests in a variety of languages.
        status: None
        fields:
          - enabled: true
          - url: http://example.com/#examples

      - name: Definitions
        header: We provide machine readable definitions for our APIs, allowing you to import into the service or tooling of your choice.
        footer: Feel free to submit a pull request for these API definitions using GitHub, or submit an issue when you see something incomplete.
        description: The machine reaable API definitions for use as part of this service.
        instruction: Publish a list of schema definitions in use by this service.
        status: Active
        fields:
          - enabled: true
          - openapi: http://example.com/openapi/
          - postman: http://example.com/postman/

      - name: Errors
        description: Details about the errors encountered using this service.
        instruction: Provide a list of available errors users will encounter for this service.
        status: None
        fields:
          - enabled: true

  #------
  # Code
  #------
  - name: Code
    title: Code / Libraries / SDKs
    header: These are the code samples, libraries, and SDKs we provide in a variety of programming languages, helping jumpstart your integration with the API.
    footer: If there isn't a language library you need available, make sure and let us know through one of the support channels, so we can consider for the road map.
    instructions: Providing code samples, libraries, or complete software development kits (SDKs).
    image: http://locations.apievangelist.com/assets/images/code.png
    status: Active
    items:

      - name: PHP
        description: This is the PHP SDK for integrating with this service.
        instruction: Provide a PHP SDK.
        status: Active
        fields:
          - url: http://example.com/php/

      - name: Python
        description: This is the Python SDK for integrating with this service.
        instruction: Provide a Python SDK.
        status: Active
        fields:
          - url: http://example.com/python/

      - name: Ruby
        description: This is the Ruby SDK for integrating with this service.
        instruction: Provide a Ruby SDK.
        status: Active
        fields:
          - url: http://example.com/ruby/

      - name: Go
        description: This is the Go SDK for integrating with this service.
        instruction: Provide a Go SDK.
        status: Active
        fields:
          - url: http://example.com/go/

      - name: Java
        description: This is the Java SDK for integrating with this service.
        instruction: Provide a Java SDK.
        status: Active
        fields:
          - url: http://example.com/java/

      - name: C#
        description: This is the C# SDK for integrating with this service.
        instruction: Provide a C# SDK.
        status: Active
        fields:
          - url: http://example.com/csharp/

      - name: Node.js
        description: This is the Node.js SDK for integrating with this service.
        instruction: Provide a Node.js SDK.
        status: Active
        fields:
          - url: http://example.com/node/

      - name: JavaScript
        description: This is the JavaScript SDK for integrating with this service.
        instruction: Provide a JavaScript SDK.
        status: Active
        fields:
          - url: http://example.com/javascript/

  #-----------
  # Licensing
  #-----------
  - name: Licensing
    title: Licensing
    header: This is what you need to know regarding the licensing of resources that are available as part of this service, breaking down the license applied to each component.
    footer: If you have any questions on licensing of code, data, or other aspect of this service, please use one of the support channels to give us more detail on your licensing query.
    instructions: Provide a set of licensing in place for this service.
    status: Active
    items:

      - name: Server
        title: Server Licensing
        description: The licensing for the server code behind this service.
        instruction: Define how all backend server code is licensed for this service.
        status: Active
        fields:
          - name: MIT
          - url: https://opensource.org/licenses/MIT
          - image: http://locations.apievangelist.com/assets/images/mit-license.png

      - name: Data
        title: Data Licensing
        description: Licensing for the data used as part of this service.
        instruction: Define how all data and schema is licensed for this service.
        status: Active
        fields:
          - name: ODbL
          - url: https://opendatacommons.org/licenses/odbl/1-0/
          - image: http://locations.apievangelist.com/assets/images/okfn.png

      - name: API
        title: API Licensing
        description: Licensing for the API interface for this service.
        instruction: Define how the API definition is licensed for this service.
        status: Active
        fields:
          - name: CC-BY
          - url: https://creativecommons.org/licenses/by/2.0/
          - image: http://locations.apievangelist.com/assets/images/cc-by.png

      - name: SDKs
        title: SDK Licensing
        description: Licensing for the SDKs provided for this service.
        instruction: Define how all client code is licensed for this service.
        status: Active
        fields:
          - name: MIT
          - url: https://opensource.org/licenses/MIT
          - image: http://locations.apievangelist.com/assets/images/mit-license.png

  #----------
  # Support
  #----------
  - name: Support
    title: Support
    header: We provide three ways in which you can receive support for this API, and have your questions answered as you are working to integrate it into your web or mobile application.
    footer: If your question is of the private nature please email us, for all other inquires please submit as GitHub issue if possible, so that others can learn from your question to.
    instructions: Establish the support apparatus in place for this service.
    status: Active
    items:

      - name: Email
        title: Email
        description: The email account for supporting this service.
        instruction: Define the email account used to support this service.
        image: http://locations.apievangelist.com/assets/images/email.png
        status: Active
        fields:
          - email: mailto%3A info@apievangelist.com

      - name: GitHub Issues
        title: GitHub Issues
        description: Where to submit an issue to get support for this service.
        instruction: Provide a URL to the repository issues to support this service.
        image: http://locations.apievangelist.com/assets/images/github.png
        status: Active
        fields:
          - url: https://github.com/api-evangelist-apis/locations/issues

      - name: Twitter
        title: Twitter
        description: Where to get support publicly using a supported Twitter account
        instruction: Provide the URL to the Twitter account supporting the API.
        image: http://locations.apievangelist.com/assets/images/twitter.png
        status: Active
        fields:
          - url: https://twitter.com/apievangelist/

      - name: Ticket
        title: Ticket
        description: Where to submit a ticket to get support for this service.
        instruction: Provide a URL to the ticketing system used to support this service.
        image: http://locations.apievangelist.com/assets/images/twitter.png
        status: None
        fields:
          - url: http://example.com/tickets/

  #------
  # FAQs
  #------
  - name: FAQs
    title: Frequently Asked Questions (FAQ)
    header: These are the frequently asked questions (FAQ) for this service, reflecting the questions most asked by consumers of this service.
    footer: If you have a question, and you don't find the answer listed here, feel free to use one of the support channels above to get it answered.
    instructions: Publish a list of the frequently asked questions (FAQ) for this service.
    status: None
    items:

      - name: Categories
        description: The categories of FAQ questions.
        instruction: Break all questions down by logical categories.
        status: None
        fields:
          - categories:
            - Category One
            - Category Two
            - Category Three
            - Category Four

      - name: Questions
        description: The questions asked about this service.
        instruction: Publish a list of questions with answers within each category.
        status: None
        fields:
          - questions:
            - question: Question One
              answer: This is the short, precise answer to question number one.
              category: Category One
            - question: Question Two
              answer: This is the short, precise answer to question number two.
              category: Category One
            - question: Question One
              answer: This is the short, precise answer to question number one.
              category: Category Two
            - question: Question Two
              answer: This is the short, precise answer to question number two.
              category: Category Two
            - question: Question One
              answer: This is the short, precise answer to question number one.
              category: Category Three
            - question: Question Two
              answer: This is the short, precise answer to question number two.
              category: Category Three
            - question: Question One
              answer: This is the short, precise answer to question number one.
              category: Category Four
            - question: Question Two
              answer: This is the short, precise answer to question number two.
              category: Category Four

      - name: Ask Question
        description: Asking a question about this service.
        instruction: Provide a form for users to ask a new question.
        status: None
        fields:
          - title: Ask a Question
          - description: This is the description of asking question.
          - url: http://example.com/ask/

  #---------------
  # Communication
  #---------------
  - name: Communication
    title: Staying In Tune
    header: Here are the commmunication channels provided to you, helping you stay in tune with what is changing with this service, and the overall platform behind it.
    footer: These channels should provide you with a regular hearbeat of the changes being made, and what is being planned as part of this platform's operations.
    instructions: Establish a communication strategy for this service.
    image: http://locations.apievangelist.com/assets/images/communication.png
    status: Active
    items:

      - name: Blog
        title: Blog
        description: The blog for this service.
        instruction: Provide a simple blog and update mechanism for this service.
        image: http://locations.apievangelist.com/assets/images/blog.png
        status: Active
        fields:
          - url: http://example.com/blog/
          - atom: http://example.com/atom/

      - name: Twitter
        title: Twitter
        description: The Twitter account for this service.
        instruction: Provide the Twitter handle that is used as part of this service.
        image: http://locations.apievangelist.com/assets/images/twitter.png
        status: Active
        fields:
          - handle: http://twitter.com/handle/

      - name: Github
        title: Github
        description: The Github account for this service.
        instruction: Provide the Github account or organization behind this service.
        image: http://locations.apievangelist.com/assets/images/github.png
        status: Active
        fields:
          - handle: http://github.com/handle/

      - name: Internal
        title: Internal
        description: Internal communication channel for this service.
        instruction: Provide a location where internal communication is available.
        image: http://locations.apievangelist.com/assets/images/internal.png
        status: None
        fields:
          - url: http://example.com/private-comm/

      - name: External
        title: External
        description: External communication channels for this service.
        instruction: Provide a location where public communication is available.
        image: http://locations.apievangelist.com/assets/images/external.png
        status: None
        fields:
          - url: http://example.com/communication/

  #----------
  # Road Map
  #----------
  - name: Road Map
    title: Road Map
    instructions: Provide a road map for the future of this service.
    description: Providing API consumers with as much information as possible about what changes are being planned for a service. Helping include consumers in the conversation about what is being planned whenever possible.
    header: This is what we plan on doing in the near future when it comes to evolving this service, documenting the features we are planning to add to this service in future iterations.
    footer: We try to share as much information as possible about what changes will be occurring, helping you plan for your integration--make sure and share your thoughts about what you'd like to see.
    image: http://locations.apievangelist.com/assets/images/road-map.png
    status: Active
    items:

      - name: Private
        title: Private Road Map
        description: Where you can access the private road map for this service.
        instruction: Publish a private, internal version of entries for the road map.
        status: None
        fields:
          - url: http://example.com/private-road-map/

      - name: Public
        title: Road Map
        description: Where you can access the public road map for this service.
        instruction: Publish a publicly available version of entries for the road map.
        status: Active
        fields:
          - url: http://locations.apievangelist.com/#road-map
          - entries:
            - title: Roadmap Item
              date: 1/1/2019
              description: This is a description for the item.
            - title: Roadmap Item
              date: 1/1/2019
              description: This is a description for the item.
            - title: Roadmap Item
              date: 1/1/2019
              description: This is a description for the item.
            - title: Roadmap Item
              date: 1/1/2019
              description: This is a description for the item.

      - name: Suggest
        title: Suggestions For The Road Map
        description: Consumers are welcome to suggest an addition to the road map.
        instruction: Provide a mechanism for users to make suggestions for the road map.
        status: Active
        fields:
          - title: Suggest Road Map Item
          - description: Make Suggestion
          - url: https://github.com/api-evangelist-apis/locations/issues

  #--------
  # Issues
  #--------
  - name: Issues
    title: Issues
    description: Being transparent around the issues that are currently outstanding regarding a platform. Potentially saving resources having to respond to further emails, tickets, and issues being reported.
    header: These are the current issues that are outstanding for this service at the moment--letting you know that we are working hard to fix.
    footer: We provide visibility into these issues because we want to be as transparent as possible with what is happening with the service.
    instructions: Provide a list of currently known issues for this service.
    image: http://locations.apievangelist.com/assets/images/issues.png
    status: Active
    items:

      - name: Entries
        description: Listing of all the outstanding issues for this service.
        instruction: Publish a list of all known issues currently outstanding.
        status: Active
        fields:
          - url: http://locations.apievangelist.com/#issues
          - entries:
            - title: Issue Item
              date: 1/1/2019
              description: This is a description for the item.
            - title: Issue Item
              date: 1/1/2019
              description: This is a description for the item.

      - name: Report
        description: Reporting an issue for this service.
        instruction: Provide a mechanism for users to report issues.
        status: Active
        fields:
          - title: Report An Issue
          - description: Report
          - url: https://github.com/api-evangelist-apis/locations/issues

  #------------
  # Change Log
  #------------
  - name: Change Log
    title: Change Log
    description: Provide consumers with a detail history of what has changed in the past with a service. Rolling over road map items, and  issues when they have been accomplished or satisfied into a detailed change log.
    header: This is a detailed list of everything that has changed with this platform, providing you with the history of what has happened over time with this service.
    footer: Showing our track record when it comes to changes being made to this platform, showing the work we've done to deliver on our road map, and satisfy all the open issue.
    instructions: Providing a historical list of what has changed for this service.
    image: http://locations.apievangelist.com/assets/images/change-log.png
    status: Active
    items:

      - name: Entries
        title: Entries
        description: Providing a list of what has changed with this platform along with each road map item being accomplished, and issue being resolved.
        instruction: Publish a list of all road map and issue entries that have been satisfied for this service.
        status: Active
        fields:
          - url: http://example.com/change-log/
          - entries:
            - title: Change Log Item
              date: 1/1/2019
              description: This is a description for the item.
            - title: Change Log Item
              date: 1/1/2019
              description: This is a description for the item.
            - title: Change Log Item
              date: 1/1/2019
              description: This is a description for the item.
            - title: Change Log Item
              date: 1/1/2019
              description: This is a description for the item.

  #-------
  # Legal
  #-------
  - name: Legal
    title: The Legal Department
    header: This is the legal department for this service, with all the details you will need to comply with usage of this service.
    footer: If you have any questions about the legal documents provided here, you can contact us through one of the support channels.
    instructions: Provide a set of legal documents guiding the service.
    status: Active
    items:

      - name: Terms of Service
        description: The terms of service (TOS) for this service.
        instruction: Provide a terms of service for this service to operate within.
        image: http://locations.apievangelist.com/assets/images/terms.png
        status: Active
        fields:
          - url: http://locations.apievangelist.com/terms-of-service/

      - name: Privacy Policy
        description: The privacy policy for this service.
        instruction: Provide a privacy policy for this service to operate within.
        image: http://locations.apievangelist.com/assets/images/privacy.png
        status: Active
        fields:
          - url: http://locations.apievangelist.com/privacy-policy/

      - name: Service Level Agreement
        description: The service level agreement (SLA) for this service.
        instruction: Provide a service level agreement (SLA) for this service to operate within.
        image: http://locations.apievangelist.com/assets/images/sla.png
        status: Active
        fields:
          - url: http://locations.apievangelist.com/service-level-agreement/

  #------------
  # Monitoring
  #------------
  - name: Monitoring
    title: Monitoring
    header: The definitions for this service.
    footer:
    instructions: Defining the uptime monitoring for this service.
    status: None
    items:

      - name: Monitors
        description: The monitors for this service.
        instruction: Establish the monitors for this service.
        status: None
        fields:
          - name: Monitor Name
          - description: The description of the monitor.
          - url: http://example.com/sla/

      - name: Status
        description: The status of this service.
        instruction: Provide real time details of monitor activity.
        status: None
        fields:
          - entries:
            - title: Monitor Status
              date: 1/1/2019
              description: This is a description for the item.
            - title: Monitor Status
              date: 1/1/2019
              description: This is a description for the item.
            - title: Monitor Status
              date: 1/1/2019
              description: This is a description for the item.
            - title: Monitor Status
              date: 1/1/2019
              description: This is a description for the item.
          - embed: <embed code>

  #---------
  # Testing
  #---------
  - name: Testing
    title: Testing
    header: The definitions for this service.
    footer:
    instructions: Defining the testing for this service.
    status: None
    items:

      - name: Assertions
        description: The assertions for this service.
        instruction: Provide details of the assertions being tested for.
        status: None
        fields:
          - assertions:
            - title: Assertion Title
              description: This is a description for the assertion.
              url: http://example.com/assertion/
            - title: Assertion Title
              description: This is a description for the assertion.
              url: http://example.com/assertion/
            - title: Assertion Title
              description: This is a description for the assertion.
              url: http://example.com/assertion/
            - title: Assertion Title
              description: This is a description for the assertion.
              url: http://example.com/assertion/

      - name: Results
        description: The results of assertions tested against this service.
        instruction: Provide real time details of testing activity.
        status: None
        fields:
          - entries:
            - title: Test Status
              date: 1/1/2019
              description: This is a description for the item.
            - title: Test Status
              date: 1/1/2019
              description: This is a description for the item.
            - title: Test Status
              date: 1/1/2019
              description: This is a description for the item.
            - title: Test Status
              date: 1/1/2019
              description: This is a description for the item.

  #-------------
  # Performance
  #-------------
  - name: Performance
    title: Performance
    header: The definitions for this service.
    footer:
    instructions: Defining the performance monitoring for this service.
    status: None
    items:

      - name: Tests
        description: The performance tests for this service.
        instruction: Provide details of the performance testing in place for this service.
        status: None
        fields:
          - assertions:
            - title: Performance Test Title
              description: This is a description for the test.
              url: http://example.com/assertion/
            - title: Performance Test Title
              description: This is a description for the test.
              url: http://example.com/assertion/
            - title: Performance Test Title
              description: This is a description for the test.
              url: http://example.com/assertion/
            - title: Performance Test Title
              description: This is a description for the test.
              url: http://example.com/assertion/

      - name: Results
        description: The results of performance test for this service.
        instruction: Provide real time details of performance testing activity.
        status: None
        fields:
          - entries:
            - title: Test Status
              date: 1/1/2019
              description: This is a description for the item.
            - title: Test Status
              date: 1/1/2019
              description: This is a description for the item.
            - title: Test Status
              date: 1/1/2019
              description: This is a description for the item.
            - title: Test Status
              date: 1/1/2019
              description: This is a description for the item.

  #----------
  # Security
  #----------
  - name: Security
    title: Security
    header: The definitions for this service.
    footer:
    instructions: Defining the security practices in place for this service.
    status: None
    items:

      - name: Overview
        description: The overview of security practices for this service.
        instruction: Provide the URL of the security practices overview page.
        status: None
        fields:
          - url: http://example.com/security/

      - name: Policies
        description: The policies in use for this service.
        instruction: Define the security, IAM, and other policies are in place for this service.
        status: None
        fields:
          - assertions:
            - title: Policy Title
              description: This is a description for the policy.
              url: http://example.com/policy/

      - name: Tests
        description: The security tests in use for this service.
        instruction: Define the security tests that are conducted for this service.
        status: None
        fields:
          - tests:
            - title: Security Test Title
              description: This is a description for the test.
              url: http://example.com/security/
            - title: Security Test Title
              description: This is a description for the test.
              url: http://example.com/security/

      - name: Results
        description: The results of security for this service.
        instruction: Provide real time details of security testing activity.
        status: None
        fields:
          - entries:
            - title: Test Status
              date: 1/1/2019
              description: This is a description for the item.
            - title: Test Status
              date: 1/1/2019
              description: This is a description for the item.

  #-----------
  # Discovery
  #-----------
  - name: Discovery
    title: Discovery
    header: The definitions for this service.
    footer:
    instructions: Defining the discovery aspects for this service.
    status: None
    items:

      - name: API Discovery
        description: The API discovery document for this service.
        instruction: Publish an API Discovery (APIs.json) index for the project.
        status: None
        fields:
          - url: http://example.com/api-discovery.json

      - name: OpenAPI
        description: The complete OpenAPI for this service.
        instruction: Provide URL for all OpenAPI definitions and index in API discovery index.
        status: None
        fields:
          - url: http://example.com/openapi.json

      - name: Postman Collection
        description: The Postman Collection for this service.
        instruction: Provide URL for all Postman Collections and index in API discovery index.
        status: None
        fields:
          - url: http://example.com/postman.json

  #----------
  # Analysis
  #----------
  - name: Analysis
    title: Analysis
    header: The definitions for this service.
    footer:
    instructions: Define the analysis in play for this service.
    status: None
    items:

      - name: Traffic
        description: The traffic information for this service.
        instruction: Document traffic to the service portal.
        status: None
        fields:
          - url: http://example.com/traffic/

      - name: Usage
        description: The usage information for this service.
        instruction: Document usage of APIs for the service.
        status: None
        fields:
          - url: http://example.com/usage/

      - name: Activity
        description: The activity information for this service.
        instruction: Document other activity around the service.
        status: None
        fields:
          - url: http://example.com/activity/

      - name: SLA
        description: The service level agreement for this service.
        instruction: Document whether the SLA was met for this service.
        status: None
        fields:
          - url: http://example.com/sla/

  #----------
  # Stages
  #----------
  - name: Stages
    title: Stages
    header: The definitions for this service.
    footer:
    instructions: Define the stages that are applied to this lifecycle outline.
    items:

      - name: Prototype
        description: When a prototype of this service is being developed.

      - name: Development
        description: When a production instance of service is being developed.

      - name: Production
        description: When a production instance of service is being operated.

  #----------
  # Maintenance
  #----------
  - name: Maintenance
    title: Maintenance
    header: The definitions for this service.
    footer:
    instructions: Define the maintenance cycles applied to this lifecycle outline.
    items:

      - name: Weekly
        description: Provide a version of this outline that should be considered weekly.

      - name: Monthly
        description: Provide a version of this outline that should be considered monthly.

      - name: Releases
        description: Provide a version of this outline that should be considered for each release.

      - name: Governance
        description: Provide an outline of how this outline is measured, reported, and evolved.

#------------------
# General Settings
#------------------
markdown: kramdown
permalink: /:categories/:title/
exclude: [".rvmrc", ".rbenv-version", "README.md", "Rakefile", "changelog.md", ".DS_Store"]
paginate: 1000
paginate_path: "/updates/page:num"
